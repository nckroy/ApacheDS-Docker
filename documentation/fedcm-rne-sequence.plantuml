@startuml
'https://plantuml.com/sequence-diagram

autonumber

Alice -> Wiki: Tries to access wiki
Wiki --> RP: Is logged in? No
RP --> Browser: Invokes FedCM with multilateral context
FedCM --> Alice: Shows IdP chooser
Alice --> FedCM: Chooses IdP
FedCM --> IdP: Redirects Alice to IdP with SAML session initiator for RP
IdP --> Alice: Login challenge
Alice --> IdP: Logs in
IdP --> RP: Redirects to RP with SAML assertion in front channel
RP --> Wiki: Verifies SAML assertion, attributes in session variables, redirects to Wiki
Wiki --> Alice: Grants access
@enduml


@startuml BasicSAML

title "Basic SAML Authentication, no FedCM"

box Principal
    participant Alice
    participant Browser
    participant "Window" as window
end box

box research.org
    participant Wiki
    participant RP
end box

participant "IdP 01" as IdP01
participant "IdP 02" as IdP02

Alice --> Browser: go wiki.\nresource.org
Browser  <-> Wiki: response 302 

group Request to RP - saml-profiles-2.0-os §4.1.3.1
    Browser -> RP: GET RP
    RP --> RP: No active\nSSO state\nfound.\nSet\nRelayState.
end group
group SP selects IdP saml-profiles-2.0-os §4.1.3.2
    RP -> Browser: HTML for RP UI;\nsession cookie
    activate RP
    Browser --> window **
    activate window 
    note over Alice, IdP02
        The RP presents the principal with a list of possible identity providers. OCLC has 30,000
        customers in our WAYF (with a variety of IdP protocols). eduGAIN has 5269 SAML IdPs.
        
        Seamless Access provides a solution here for a variety of use cases.
        
        SAML Profile §4.1.3.2 does not cover how this is done, but notes **proxying authentication
        requests** as an option and other discovery methods. 
        
        See also [SDP-SP20,SDP-SP23]
    end note
    Alice --> window: select IdP
    window --> Browser 
    destroy window
    Browser -> RP: choice of IdP02; cookies for research.org
end group
group Issue request saml-profiles-2.0-os §4.1.3.3 and saml-core-2.0-os §4.1.3.3
    RP --> RP  
    note left
        Construct SAML Request:
        1. Issuer's unique entity ID (URI), plus return URL 
            (AssertionConsumerServiceURL);
        3. optional <AuthnRequest>, for example to signal MFA 
            [SDP-SP07], or ForceAuthn,
        4. Security elements: 
            time stamp
            unique ID (persist)
            optional signature
        5. IdP's SSO destination
    end note
    RP -> Browser: 302 GET idp.edu/sso??SAMLRequest=[request]\nsee [SDP-SP02]\nsee also saml-bindings-2.0-os §3.4
    Browser -> IdP02: GET idp.edu/sso??SAMLRequest=[request]\nwith idp.edu cookies
    activate IdP02
end group

group Validate request
    IdP02 --> IdP02: validate
    note left
        Ensure SO is known and ACS [SDP-IDP06] acceptable.

        If signed, check signature. [SDP-IDP04] [SDP-IDP05]

        Evaluate whether assurance requests [SDP-SP07] or 
        ForceAuthn [SDP-IDP07] (and any other supported 
        requests) can be honored. Identify steps
        required for identifying the principal.

    end note 
    alt Request cannot be honored
        IdP02 --> IdP02: construct\nresponse 
        note left
            Construct error response, including the request's unique ID.
            Error should allow SO to assist principal in understanding the failure.
        end note 
    end
end
group Identify principal saml-profiles-2.0-os §4.1.3.4 
else Existing SSO state, no assurance request
    note over Alice, IdP02
        **Existing SSO can be uncommon for some usecases.**

        Note NIST SP 800-63B §4.1.3 Dec 2022 draft specfies that, for the lowest auth assurance
        level (AAL1), a session SHOULD be terminated at no longer than 30 days regardless of principal's 
        activity.The next levels, AAL2 & AAL3, are specified in §4.2.3 and §4.3.3, for  
        **reauthentication once per 12 hours or 30 (15) minutes inactivity.** 
    end note
    IdP02 --> IdP02: initiate\nresponse 
    note left
        Construct response as below, including the request's unique ID.
    end note 

else Existing SSO but ForceAuthn = true
    IdP02 -> Browser: challenge
    Browser -> window
    activate window
    Alice --> window : respond
    note right: See below, "No existing SSO," for challenge complexities.
    window -> Browser
    destroy window
    Browser -> IdP02
    IdP02 --> IdP02
    group Challenge successful
        IdP02 --> IdP02: initiate\nresponse 
        note left
            See below, "Build response," for response process.
        end note 
    else Challenge fails
        IdP02 --> IdP02: construct\nresponse 
        note left
            Construct error response, including the request's unique ID.
            Error should allow SO to assist principal in understanding the failure.
        end note 
    end
else Redirect principal to IdP
    note over Alice, IdP02
        ** Repeat from "Request to RP - saml-profiles-2.0-os §4.1.3.1"**

        Note that authentication may require proxying to a separate service. Use case includes
        a university that agregates authentication from the univeristy proper as well as the 
        univeristy hospital, related colleges (Law, Business), research institutions, and alumni.

        In this case, the IdP becomes an RP, may need to manage discovery, and then redirects
        the principal to the next IdP in the chain. 
    end note
newpage
else Identify principal
    note over Alice, IdP02
        SAML does not specify authentication practices. See NIST SP 800-63B for US government
        specifications. Notes here from Dec 2022 draft. 
    end note
    group Authenticator secret or MFA activation secret
    IdP02 -> Browser
    Browser -> window
    activate window
    Alice --> window : respond
    note right: Alice may need to engage a second factor to retrieve secret.\n800-63B §5.1.3.4, §5.1.5.1
    window -> Browser
    destroy window
    Browser -> IdP02
    IdP02 --> IdP02
    note left
        Verify authenticator per NIST SP 800-63B (Dec 2022) §5.1.*
    end note
    group Verification possibilities
    else Evidence forces change of secret
        IdP02 -> Browser: Change secret interruption
        note over Alice, IdP02
            If there is evidence of a threat the user may be prompted to change their secret.
            NIST SP 800-63B-4 ip line 735. This behavior may differ in implementations and the
            user may have to reinitialize their authentication flow, or may be authenticated 
            back to the RP after that process.
        end note 
    else Challenge successful, no second challenge
        IdP02 --> IdP02: initiate\nresponse 
        note left
            See below, "Build response," for response process.
        end note 
    else Challenge fails
        IdP02 --> IdP02: construct\nresponse 
        note left
            Construct error response, including the request's unique ID.
            Error should allow SO to assist principal in understanding the failure.
        end note 
    else Challenge successful, second challenge
        IdP02 -> Browser: challenge
        Browser -> window
        activate window
        Alice --> window : respond
        note right: Alice may need to engage a second factor to retrieve secret.\n800-63B §5.1.3.4, §5.1.5.1
        window -> Browser
        destroy window
        Browser -> IdP02
        IdP02 --> IdP02
        note left
            Verify authenticator per NIST SP 800-63B (Dec 2022) §5.1.*
        end note   
        group Verification possibilities  
        else Challenge fails
            IdP02 --> IdP02: construct\nresponse 
            note left
                Construct error response, including the request's unique ID.
                Error should allow SO to assist principal in understanding the failure.
            end note 
        else Challenge successful
            IdP02 --> IdP02: initiate\nresponse 
            note left
                See below, "Build response," for response process.
            end note    
        end     
    end
end
end
group Build response saml-profiles-2.0-os §4.1.3.5 and §4.1.4.2
    alt Get external subject identifier
        note over Alice, IdP02
            See SAML V2.0 Subject Identifier Attributes Profile
        end note
        IdP02 --> IdP02: look up\nprincipal's\nidentifiers
    else General Purpose Subject Identifier
        IdP02 --> IdP02: format
        note left: long-lived, non-reassignable, **omni**-directional identifier suitable\nfor use as a globally-unique external key.
    else General Purpose Subject Identifier
        IdP02 --> IdP02: generate\nif neccesary
        note left: long-lived, non-reassignable, **uni**-directional identifier suitable\nfor use as a globally-unique external key.
    end
    note over Alice, IdP02
        <Response> includes
        * <Issuer> identity of IdP,
        * An identifier for the principal (SAML2Int §4.1.3. Subject Identifiers) ,
        * <NotOnOrAfter> timestamp to limit lifetime,
        * <InResponseTo> with the request's unique ID.,
        * <AudienceRestriction> limiting to the RP,
        * any other attributes. 
    end note
    IdP02 --> IdP02: encrypt\assertion
    note left: SAML2Int [SDP-IDP10]
    IdP02 --> IdP02: sign\nresponse
    note left: SAML2Int [SDP-IDP09]
    IdP02 -> Browser: POST AssertionConsumerServiceURL [response]
    Browser -> RP: POST AssertionConsumerServiceURL [response]\n cookies for research.org
end
group Evaluate response saml-profiles-2.0-os §4.1.3.6
else Successful response
    RP --> RP: find session
    alt No session
        RP -> Browser: error
    end
    RP --> RP: decrypt [SDP-SP10]
    RP --> RP: verify response security elements
    note over Alice, IdP02
        Does the IdP's signature validate?
        Is the IdP correct?
        Does the <InResponseTo> match request's unique ID (and has not been received before)?
        Is the timestamp on the response still within the window?
        Is the <AudienceRestriction> for the RP?
        Is the identifier scope one the IdP may assert? [SDP-SP17] 
    end note
    alt Fail validation
        RP -> Browser: error
    end

else Error response SAML2Int [SDP-SP11] [SDP-SP12]
    RP --> RP
    note over Alice, IdP02
        RP may advise principal that IdP cannot satisfy requirements, or may redirect the user back to the 
        IdP's error URL.
    end note
    RP -> Browser
    destroy RP
end






@enduml


@startuml 2023-02

box User
    participant Alice
    participant Browser
    participant "Window" as window
end box

box research.org
    participant Wiki
    participant RP
end box

participant "IdP 01" as IdP01
participant "IdP 02" as IdP02

Alice --> Browser: go wiki.\nresource.org
Browser  <-> Wiki: response 302 
Browser -> RP: GET RP
RP --> RP: No active\nSSO state\nfound
RP -> Browser: HTML for RP UI;\nsession cookie
Browser --> window **
activate window 
note over Browser, window
    It is possible for the RP's UI page to interact with the user
    BEFORE calling n.c.get. It would be sad if this was 
    a pre-discovery step to cut down on the number of IdPs.
end note
window -[#red]-> Browser:n.c.get\n(IdP list) 
activate Browser
note right
    Assume https://github.com/fedidcg/
    FedCM/blob/main/proposals/multi-
    idp-api.md is implemented.
    Assume clientID = RP entity ID and a
    SAML_request key with a value of a SAML 
    request as would be sent in redirect.

    Note: this is huge for R&E federations.
end note
Browser --> Browser: state engine
note right
    Assume two previously registered 
    IdPs for this RP. Browser will
    optimize by first offering 
    registereed IdPs 
end note
Browser <-> IdP01 : GET /.well-known/web-identity
Browser <-> IdP02 : GET /.well-known/web-identity
Browser <-> IdP01 : GET config
Browser <-> IdP02 : GET config
note over Browser, IdP02
    Assume IdentityProviderAPIConfig is extended to include
     a protocol key; IdP2 returns protocol=SAMLv2. 
    Assume this protocol value triggers browsers to 
    append a query parameter SAMLRequest to the client
    endpoint call, with a value provided in the n.c.get(IdP list)
    call from the RP. This also prepares the browser to 
    expect the response to the account call.
end note

Browser -> IdP01: Cookies
Browser <-> IdP01: GET accounts

Browser -> IdP02: Cookies
Browser -> IdP02: GET accounts

alt Assume existing SSO  state at IdP02
    IdP02 -> Browser:  Single Account Label
    note over Browser, IdP02
        SAML IdPs would not expose more than one
        account at a time. The label for the account 
        may not be an email. 
    end note
else Assume no existing SSO state at IdP02
    IdP02 -> Browser: request to initiate authN
end

Browser <-> IdP01: GET client?....
Browser -> IdP02: GET client?client_id=[entityId]&\nSAML_request=[req]

alt Assume IdP recognizes RP
    IdP02 -> Browser: metadata about IdP-RP interaction
     note over Browser, IdP02
        Note that the RP's request might require the 
        browser to step up an already active authentication
        state to improve the authentication assurance.
        The response here would include a message that the
        IdP needs control before authenticating the principal.
     end note
else IdP cannot satisfy RP request
    IdP02 -> Browser: Error code, Error message for principal
    note over Browser, IdP02
        An IdP might not recognize an RP at all, or the IdP
        might not be able to satisfy criteria in the current 
        RP request.
    end note
end

Browser --> Browser: IdP chooser
note right
    Assume UI presents the two previously
    registered with a link to choose a 
    different one. If there was an error 
    message for a previously registered 
    IdP, display to the principal, but 
    do not allow selection.

    Assume choice between IdP 01 & IdP 02
    or select from more.
end note
Alice --> Browser: select IDP 02

Browser -> IdP02: cookies; POST assertion
note over Browser, IdP02
    Includes SAMLRequest 
end note

alt Assume active SSO stete, no step up
    IdP02 -> Browser: LARGE XML response, encoded, etc
    destroy window
    Browser -> RP: response\nsession cookie
    destroy Browser
    RP --> RP: establish\nsession
    RP -> Browser: 302
    Browser <-> Wiki: GET wiki
    Browser --> window: render wiki
    activate window
else Assume IdP requests control
    [--> Browser
    activate Browser
    IdP -> Browser: HTML
    destroy window
    Browser -> window: Render IdP page
    activate window
    note over Browser, IdP02
        There may be multiple POSTS here, particularly given
        multiple factors to establish identity. It is conceivable
        that this flow may spawn a second authentication
        flow.
    end note
    ...iterations of...
    Alice --> window: interaction
    window --> Browser
    Browser <-> IdP02
    ...eventually...
    window -[#red]-> Browser:  n.c.post\n(LARGE XML\nresponse)
    destroy window
    Browser -> RP: response\nsession cookie
    destroy Browser
    RP --> RP: establish\nsession
    RP -> Browser: 302
    Browser <-> Wiki: GET wiki
    Browser --> window: render wiki
    activate window
end    


@enduml



@startuml BasicSAML

title "Basic SAML Authentication, no FedCM"

box Principal
    participant Alice
    participant Browser
    participant "Window" as window
end box

box research.org
    participant Wiki
    participant RP
end box

participant "IdP 01" as IdP01
participant "IdP 02" as IdP02

Alice --> Browser: go wiki.\nresource.org
Browser  <-> Wiki: response 302 

group Request to RP - saml-profiles-2.0-os §4.1.3.1
    Browser -> RP: GET RP
    RP --> RP: No active\nSSO state\nfound.\nSet\nRelayState.
end group
group SP selects IdP saml-profiles-2.0-os §4.1.3.2
    RP -> Browser: HTML for RP UI;\nsession cookie
    activate RP
    Browser --> window **
    activate window 
    note over Alice, IdP02
        The RP presents the principal with a list of possible identity providers. OCLC has 30,000
        customers in our WAYF (with a variety of IdP protocols). eduGAIN has 5269 SAML IdPs.
        
        Seamless Access provides a solution here for a variety of use cases.
        
        SAML Profile §4.1.3.2 does not cover how this is done, but notes **proxying authentication
        requests** as an option and other discovery methods. 
        
        See also [SDP-SP20,SDP-SP23]
    end note
    Alice --> window: select IdP
    window --> Browser 
    destroy window
    Browser -> RP: choice of IdP02; cookies for research.org
end group
group Issue request saml-profiles-2.0-os §4.1.3.3 and saml-core-2.0-os §4.1.3.3
    RP --> RP  
    note left
        Construct SAML Request:
        1. Issuer's unique entity ID (URI), plus return URL 
            (AssertionConsumerServiceURL);
        3. optional <AuthnRequest>, for example to signal MFA 
            [SDP-SP07], or ForceAuthn,
        4. Security elements: 
            time stamp
            unique ID (persist)
            optional signature
        5. IdP's SSO destination
    end note
    RP -> Browser: 302 GET idp.edu/sso??SAMLRequest=[request]\nsee [SDP-SP02]\nsee also saml-bindings-2.0-os §3.4
    Browser -> IdP02: GET idp.edu/sso??SAMLRequest=[request]\nwith idp.edu cookies
    activate IdP02
end group

group Validate request
    IdP02 --> IdP02: validate
    note left
        Ensure SO is known and ACS [SDP-IDP06] acceptable.

        If signed, check signature. [SDP-IDP04] [SDP-IDP05]

        Evaluate whether assurance requests [SDP-SP07] or 
        ForceAuthn [SDP-IDP07] (and any other supported 
        requests) can be honored. Identify steps
        required for identifying the principal.

    end note 
    alt Request cannot be honored
        IdP02 --> IdP02: construct\nresponse 
        note left
            Construct error response, including the request's unique ID.
            Error should allow SO to assist principal in understanding the failure.
        end note 
    end
end
group Identify principal saml-profiles-2.0-os §4.1.3.4 
else Existing SSO state, no assurance request
    note over Alice, IdP02
        **Existing SSO can be uncommon for some usecases.**

        Note NIST SP 800-63B §4.1.3 Dec 2022 draft specfies that, for the lowest auth assurance
        level (AAL1), a session SHOULD be terminated at no longer than 30 days regardless of principal's 
        activity.The next levels, AAL2 & AAL3, are specified in §4.2.3 and §4.3.3, for  
        **reauthentication once per 12 hours or 30 (15) minutes inactivity.** 
    end note
    IdP02 --> IdP02: initiate\nresponse 
    note left
        Construct response as below, including the request's unique ID.
    end note 

else Existing SSO but ForceAuthn = true
    IdP02 -> Browser: challenge
    Browser -> window
    activate window
    Alice --> window : respond
    note right: See below, "No existing SSO," for challenge complexities.
    window -> Browser
    destroy window
    Browser -> IdP02
    IdP02 --> IdP02
    group Challenge successful
        IdP02 --> IdP02: initiate\nresponse 
        note left
            See below, "Build response," for response process.
        end note 
    else Challenge fails
        IdP02 --> IdP02: construct\nresponse 
        note left
            Construct error response, including the request's unique ID.
            Error should allow SO to assist principal in understanding the failure.
        end note 
    end
else Redirect principal to IdP
    note over Alice, IdP02
        ** Repeat from "Request to RP - saml-profiles-2.0-os §4.1.3.1"**

        Note that authentication may require proxying to a separate service. Use case includes
        a university that agregates authentication from the univeristy proper as well as the 
        univeristy hospital, related colleges (Law, Business), research institutions, and alumni.

        In this case, the IdP becopmes an RP, may need to manage discovery, and then redirects
        the principal to the next IdP in the chain. 
    end note
newpage
else Identify principal
    note over Alice, IdP02
        SAML does not specify authentication practices. See NIST SP 800-63B for US government
        specifications. Notes here from Dec 2022 draft. 
    end note
    group Authenticator secret or MFA activation secret
    IdP02 -> Browser
    Browser -> window
    activate window
    Alice --> window : respond
    note right: Alice may need to engage a second factor to retrieve secret.\n800-63B §5.1.3.4, §5.1.5.1
    window -> Browser
    destroy window
    Browser -> IdP02
    IdP02 --> IdP02
    note left
        Verify authenticator per NIST SP 800-63B (Dec 2022) §5.1.*
    end note
    group Verification possibilities
    else Evidence forces change of secret
        IdP02 -> Browser: Change secret interruption
        note over Alice, IdP02
            If there is evidence of a threat the user may be prompted to change their secret.
            NIST SP 800-63B-4 ip line 735. This behavior may differ in implementations and the
            user may have to reinitialize their authentication flow, or may be authenticated 
            back to the RP after that process.
        end note 
    else Challenge successful, no second challenge
        IdP02 --> IdP02: initiate\nresponse 
        note left
            See below, "Build response," for response process.
        end note 
    else Challenge fails
        IdP02 --> IdP02: construct\nresponse 
        note left
            Construct error response, including the request's unique ID.
            Error should allow SO to assist principal in understanding the failure.
        end note 
    else Challenge successful, second challenge
        IdP02 -> Browser: challenge
        Browser -> window
        activate window
        Alice --> window : respond
        note right: Alice may need to engage a second factor to retrieve secret.\n800-63B §5.1.3.4, §5.1.5.1
        window -> Browser
        destroy window
        Browser -> IdP02
        IdP02 --> IdP02
        note left
            Verify authenticator per NIST SP 800-63B (Dec 2022) §5.1.*
        end note   
        group Verification possibilities  
        else Challenge fails
            IdP02 --> IdP02: construct\nresponse 
            note left
                Construct error response, including the request's unique ID.
                Error should allow SO to assist principal in understanding the failure.
            end note 
        else Challenge successful
            IdP02 --> IdP02: initiate\nresponse 
            note left
                See below, "Build response," for response process.
            end note    
        end     
    end
end
end
group Build response saml-profiles-2.0-os §4.1.3.5 and §4.1.4.2
    alt Get external subject identifier
        note over Alice, IdP02
            See SAML V2.0 Subject Identifier Attributes Profile
        end note
        IdP02 --> IdP02: look up\nprincipal's\nidentifiers
    else General Purpose Subject Identifier
        IdP02 --> IdP02: format
        note left: long-lived, non-reassignable, **omni**-directional identifier suitable\nfor use as a globally-unique external key.
    else General Purpose Subject Identifier
        IdP02 --> IdP02: generate\nif neccesary
        note left: long-lived, non-reassignable, **uni**-directional identifier suitable\nfor use as a globally-unique external key.
    end
    note over Alice, IdP02
        <Response> includes
        * <Issuer> identity of IdP,
        * An identifier for the principal (SAML2Int §4.1.3. Subject Identifiers) ,
        * <NotOnOrAfter> timestamp to limit lifetime,
        * <InResponseTo> with the request's unique ID.,
        * <AudienceRestriction> limiting to the RP,
        * any other attributes. 
    end note
    IdP02 --> IdP02: encrypt\assertion
    note left: SAML2Int [SDP-IDP10]
    IdP02 --> IdP02: sign\nresponse
    note left: SAML2Int [SDP-IDP09]
    IdP02 -> Browser: POST AssertionConsumerServiceURL [response]
    Browser -> RP: POST AssertionConsumerServiceURL [response]\n cookies for research.org
end
group Evaluate response saml-profiles-2.0-os §4.1.3.6
else Successful response
    RP --> RP: find session
    alt No session
        RP -> Browser: error
    end
    RP --> RP: decrypt [SDP-SP10]
    RP --> RP: verify response security elements
    note over Alice, IdP02
        Does the IdP's signature validate?
        Is the IdP correct?
        Does the <InResponseTo> match request's unique ID (and has not been received before)?
        Is the timestamp on the response still within the window?
        Is the <AudienceRestriction> for the RP?
        Is the identifier scope one the IdP may assert? [SDP-SP17] 
    end note
    alt Fail validation
        RP -> Browser: error
    end

else Error response SAML2Int [SDP-SP11] [SDP-SP12]
    RP --> RP
    note over Alice, IdP02
        RP may advise principal that IdP cannot satisfy requirements, or may redirect the user back to the 
        IdP's error URL.
    end note
    RP -> Browser
    destroy RP
end






@enduml

